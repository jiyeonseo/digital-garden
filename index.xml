<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>🪴 on</title><link>https://jiyeonseo.github.io/digital-garden/</link><description>Recent content in 🪴 on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jiyeonseo.github.io/digital-garden/index.xml" rel="self" type="application/rss+xml"/><item><title>(Build Your Own Redis with C/C++) 1. socket 통신, Protocol Parsing</title><link>https://jiyeonseo.github.io/digital-garden/notes/build-your-own-redis-with-c-cpp-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/build-your-own-redis-with-c-cpp-1/</guid><description>Build Your Own Redis With C/C++ 을 보고 정리한 글입니다. 더 자세한 나용은 원문을 참고하실 수 있습니다. 직접 실습한 코드는 jiyeonseo/build-your-own-redis-with-c-cpp 에서 찾아볼 수 있습니다.</description></item><item><title>2023년 1월 독서</title><link>https://jiyeonseo.github.io/digital-garden/notes/2023.01-books/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/2023.01-books/</guid><description>오늘 또 일을 미루고 말았다 오늘 또 일을 미루고 말았다 : 일에 쫓겨 인생마저 꼬였을 때, 오늘부터 로켓 스타트 시간 관리법 마이크로소프트에서 윈도우 95, 더블클릭 등 개발에 참여했던 개발자 나카지마 사토시의 시간관리 법에 대한 책.</description></item><item><title>[redis-py Cluster] Redis Cluster cannot be connected. Please provide at least one reachable node</title><link>https://jiyeonseo.github.io/digital-garden/notes/Redis-Cluster-cannot-be-connected.-Please-provide-at-least-one-reachable-node/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Redis-Cluster-cannot-be-connected.-Please-provide-at-least-one-reachable-node/</guid><description>[[notes/memorydb]] 를 node 2개(master + replica)로, client는 redis-py cluster로 연결하고 사용하고 있었다. Memory DB는 Redis Cluster로 구성되어있기 때문에 하나의 node가 내려가더라도 대기중인 replica가 올라가기 때문에 내구성이 뛰어나고, 모든 노드에 똑같이 복사가 되기 때문에 데이터의 유실도 없다.</description></item><item><title>ABI</title><link>https://jiyeonseo.github.io/digital-garden/notes/ABI/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/ABI/</guid><description>Contract Application Binary Interface Smart Contract 함수와 파라미터에 대한 Interface 정의 가지고 있는 정보 함수에 대한 정보 함수에서 사용하는 인수 예시 : https://etherscan.</description></item><item><title>Amazon Athena</title><link>https://jiyeonseo.github.io/digital-garden/notes/Amazon-Athena/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Amazon-Athena/</guid><description/></item><item><title>arweave.org</title><link>https://jiyeonseo.github.io/digital-garden/notes/arweave.org/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/arweave.org/</guid><description> www.arweave.org</description></item><item><title>Atomic swap</title><link>https://jiyeonseo.github.io/digital-garden/notes/atomic-swap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/atomic-swap/</guid><description>중앙화된 거래소를 거치지않고 서로 다른 코인을 직접 교환하는 것 full name : atomic cross chain trading 코인 스왑(coin swap) 혹은 에어스왑(airswap)이라고도 한다.</description></item><item><title>AWS CLI</title><link>https://jiyeonseo.github.io/digital-garden/notes/AWS-CLI/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/AWS-CLI/</guid><description>AWS Configuration 설정 확인하기 aws configure로 구성한 credential 확인하려면 아래와 같이 할 수 있다.
1 2 3 4 5 6 7 8 9 10 11 vi ~/.</description></item><item><title>AWS S3 presigned URL 사용 방법</title><link>https://jiyeonseo.github.io/digital-garden/notes/AWS-S3-presigned-URL/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/AWS-S3-presigned-URL/</guid><description>S3는 기본적으로 private이지만, presigned_url을 통해 권한이 없는 사람에게도 object를 받을 수 있도록 임시로 허용할 수 있다. 만료시간을 주어 access를 조절할 수 있다.</description></item><item><title>AWS 비용 최적화</title><link>https://jiyeonseo.github.io/digital-garden/notes/AWS-Cost-Optimization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/AWS-Cost-Optimization/</guid><description>1) 리소스에 Tag 달기 리소스 만들고 맨 마지막에 나오는 optional 메타데이터 (key-value) 3) Compute 비용 최적화 정리 4) AWS Trusted Advisor 5) 우리 회사에 맞는 비용 대시보드 References AWS 쓰다 보면 꼭 고민하는 것, 비용 최적화!</description></item><item><title>Block Proposer</title><link>https://jiyeonseo.github.io/digital-garden/notes/Block-Proposer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Block-Proposer/</guid><description>References What is Proposer / Builder Separation (PBS)?</description></item><item><title>Blockchain</title><link>https://jiyeonseo.github.io/digital-garden/notes/Blockchain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Blockchain/</guid><description>Blockchain public database 한 네트워크 내 여러 컴퓨터들을 통해 저장하고, 공유하는 분산형 데이터베이스 Block 연속성있는 그룹(Blocks)에 저장되는 데이터(data+state) 예를 들어, ETH를 전송했다면, 이 트랜잭션 데이터는 block에 저장됨 Chain 각 블록은 부모 블록를 참조하고 있다.</description></item><item><title>Clickhouse</title><link>https://jiyeonseo.github.io/digital-garden/notes/Clickhouse/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Clickhouse/</guid><description> https://clickhouse.com/</description></item><item><title>DB Connection Pool이 필요한 이유</title><link>https://jiyeonseo.github.io/digital-garden/notes/DB-Connection-Pool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/DB-Connection-Pool/</guid><description>DB Connection 어플리케이션이 DB server와의 통신을 위한 연결로 SQL 문을 보내고 그 결과값을 받기 위해 사용한다. 데이터베이스 서버도 앱서버와 같이 특정 포트 (예를 들어, MySQL 데이터베이스 서버는 기본 3306)로 떠 있으며, 이 서버와 백엔드 서버가 TCP-IP protocol로 Connection을 맺는다.</description></item><item><title>DB Index</title><link>https://jiyeonseo.github.io/digital-garden/notes/DB-Index/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/DB-Index/</guid><description>Simple indexes Secondary indexes B-trees Hash tables</description></item><item><title>ERC-1155</title><link>https://jiyeonseo.github.io/digital-garden/notes/ERC-1155/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/ERC-1155/</guid><description/></item><item><title>ERC-20</title><link>https://jiyeonseo.github.io/digital-garden/notes/erc-20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/erc-20/</guid><description>ERC-20 Token Standard
각 토큰은 다른 토큰과 정확히 동일한 속성을 가지고 있다. ETH과 동일하게 작동하며, 1개의 토큰은 다른 토큰과 항상 같다.</description></item><item><title>ERC-721</title><link>https://jiyeonseo.github.io/digital-garden/notes/ERC-721/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/ERC-721/</guid><description/></item><item><title>ERC721A</title><link>https://jiyeonseo.github.io/digital-garden/notes/ERC721A/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/ERC721A/</guid><description> ERC721A [[notes/ERC-721]] 표준의 확장. 토큰을 배치로 발행하여 막대한 양의 gas fee를 방지. 여러 토큰을 한번에 발행 ERC721A 구현하기 [[notes/Hardhat]]으로 프로젝트 세팅하기 1 npx hardhat References # ERC721A Quick Start</description></item><item><title>Ethereum</title><link>https://jiyeonseo.github.io/digital-garden/notes/Ethereum/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Ethereum/</guid><description>Ethereum 컴퓨터가 내장된 블록체인. 비트코인과 다른 점 : 암호화폐로서의 기능 뿐만 아니라 프로그래밍이 가능. 네트워크에서 분산형 애플리케이션을 구축 및 배포할 수 있음.</description></item><item><title>Ethereum Virtual Machine</title><link>https://jiyeonseo.github.io/digital-garden/notes/Ethereum-Virtual-Machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Ethereum-Virtual-Machine/</guid><description>References The Ethereum Virtual Machine — How does it work?</description></item><item><title>ethers.js</title><link>https://jiyeonseo.github.io/digital-garden/notes/ethers.js/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/ethers.js/</guid><description>ethers.js Web3 JavaScript 라이브러리로 2016년에 Richard Moore가 만들었다. 기존 라이브러리와 다르게 web3 기반으로 [[notes/Ethereum]] 네트워크와 상호작용이 쉽다. 처음에는 ethers.</description></item><item><title>Etherscan</title><link>https://jiyeonseo.github.io/digital-garden/notes/Etherscan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Etherscan/</guid><description> Etherscan 웹 어플리케이션으로 address로 [[notes/Ethereum]]의 모든 트랜잭션과 블록을 추적할수 있는 툴 transaction block address 읽는 방법 [[notes/How NFT smart contract really work]] Transaction Details</description></item><item><title>FastAPI OpenAPI custom setting</title><link>https://jiyeonseo.github.io/digital-garden/notes/FastAPI-OpenAPI/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/FastAPI-OpenAPI/</guid><description>References Extending OpenAPI</description></item><item><title>FastAPI로 reverse proxy server 만들기</title><link>https://jiyeonseo.github.io/digital-garden/notes/Reverse-proxy-server-with-FastAPI/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Reverse-proxy-server-with-FastAPI/</guid><description>[[notes/Rate Limiter]] 와 같이 중간에 Auth, Rate Limit, IP Ban 등 기능을 하는 중간 Gateway 서버로 사용시 아래와 같이 만들 수 있다.</description></item><item><title>Hardhat</title><link>https://jiyeonseo.github.io/digital-garden/notes/Hardhat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Hardhat/</guid><description> hardhat</description></item><item><title>hello 검색 엔진</title><link>https://jiyeonseo.github.io/digital-garden/notes/search-engine-hello/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/search-engine-hello/</guid><description>https://beta.sayhello.so/ The search engine for instant answers 질문에 대해 바로 대답(answer)를 보여주고 써먹을 수 있는 코드 조각을 바로 보여주는 개발자 친화 검색 엔진 How to best use Hello 자연어 검색어 지원.</description></item><item><title>How NFT smart contract really work</title><link>https://jiyeonseo.github.io/digital-garden/notes/How-NFT-smart-contract-really-work/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/How-NFT-smart-contract-really-work/</guid><description>Ethereum NFT 기준
OpenSea 예제 Doodle #1815 OpenSea 주소에서 chain, contract address, token 확인할 수 있다.</description></item><item><title>IPFS</title><link>https://jiyeonseo.github.io/digital-garden/notes/IPFS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/IPFS/</guid><description>ipfs.tech InterPlanetary File System. 분산형 파일 시스템. P2P 방식. NFT Metadata 저장하는 곳으로 많이 쓰임. 다른 서비스로는 [[arweave.</description></item><item><title>K6 부하 테스트</title><link>https://jiyeonseo.github.io/digital-garden/notes/K6-Load-Test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/K6-Load-Test/</guid><description>공식 페이지 : https://k6.io/
Grafana k6 is an open-source load testing tool that makes performance testing easy and productive for engineering teams.</description></item><item><title>LaunchDarkly</title><link>https://jiyeonseo.github.io/digital-garden/notes/LaunchDarkly/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/LaunchDarkly/</guid><description>[[notes/unleash]]와 거의 비슷하지만, enterprise만 제공하고 있다. stream 방식으로 polling 방식 unleash 보다 반영이 더 빠름 unleash와 다르게 client쪽에서 변수를 좀 더 자유롭게 사용할 수 있음.</description></item><item><title>Logstash</title><link>https://jiyeonseo.github.io/digital-garden/notes/Logstash/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Logstash/</guid><description>Configuration 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 input {beats {port =&amp;gt; 5044}}filter{}output {s3 {region =&amp;gt; &amp;#34;us-east-1&amp;#34;bucket =&amp;gt; &amp;#34;log-bucket&amp;#34;prefix =&amp;gt; &amp;#34;%{+YYYY}/%{+MM}/%{+dd}&amp;#34;codec =&amp;gt; line { format =&amp;gt; &amp;#34;%{message}&amp;#34;}}} Input filebeat file Filter Output S3 `` References Using Logstash to Send Directly to an S3 Object Store</description></item><item><title>London Upgrade</title><link>https://jiyeonseo.github.io/digital-garden/notes/London-upgrade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/London-upgrade/</guid><description>런던 [[notes/hard fork]] 2021년 8월 5일 수수료 구조 개선 및 공급량 조절 등 EIP-1559 가스비를 줄이기 위한 새로운 수수료 구조 도입 (수수료 절감) 런던 업그레이드의 핵심 내용 문제점 더 높은 수수료를 제시하는 거래가 더 빠르게 이루어지는 구조.</description></item><item><title>MemoryDB</title><link>https://jiyeonseo.github.io/digital-garden/notes/memorydb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/memorydb/</guid><description>Redis Cluster로 다중AZ 트랜잭션으로 빠르게 읽으면서도 내구성있는 DB. 따로 RDB + Cache 구성 필요 없이, Redis 구성 하나만으로 Consistency와 속도의 장점을 모두 가질 수 있다.</description></item><item><title>NFT</title><link>https://jiyeonseo.github.io/digital-garden/notes/NFT/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/NFT/</guid><description> Non-Fungible Token : 대체 불가능 토큰 모두 동일한 가치를 가지는 화폐와 달리 **&amp;ldquo;고유성&amp;rdquo;**을 가진 토큰 창작물에 대한 저작권이나 소유권 게임 내 유니크한 아이템 등 재화에 대한 소유권 예술품, 부동산, 골동품 등 등기가 필요한 자산에 대한 소유권 회원권과 같은 자격에 대한 증명 Marketplace OpenSea References NFT, 대체 불가능한 토큰</description></item><item><title>Poetry</title><link>https://jiyeonseo.github.io/digital-garden/notes/Poetry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Poetry/</guid><description>Python poetry Python의 기본 패키지 매니저인 pip의 불편한점
기본적으로 global 설치 : virtualenv와 같은 가상 환경을 따로 작업해주어야 한다.</description></item><item><title>PostgreSQL</title><link>https://jiyeonseo.github.io/digital-garden/notes/PostgreSQL/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/PostgreSQL/</guid><description>Vacuum DB 디스크 조각 모음 데이터가 update/delete pg_user select all user 1 2 3 4 5 6 7 8 9 10 11 12 13 14 SELECTusenameASrole_name,CASEWHENusesuperANDusecreatedbTHENCAST(&amp;#39;superuser, create database&amp;#39;ASpg_catalog.</description></item><item><title>Python으로 PDF 오디오북 만들기</title><link>https://jiyeonseo.github.io/digital-garden/notes/PDF%EB%A1%9C-%EC%98%A4%EB%94%94%EC%98%A4%EB%B6%81-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/PDF%EB%A1%9C-%EC%98%A4%EB%94%94%EC%98%A4%EB%B6%81-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid><description>pyttsx3 : TTS(text-to-speech) 용 (version: 2.90) PyPDF2 : PDF 파일을 다루기 위한 라이브러리 (version : 3.0.0) Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 import sys import pyttsx3 import PyPDF2 # python main.</description></item><item><title>readme.io 세팅</title><link>https://jiyeonseo.github.io/digital-garden/notes/readme.io-setting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/readme.io-setting/</guid><description>API References Try it Authentication 추가하기 openapi.json 으로 싱크하는 경우, open api spec 중 SecurityScheme 을 맞춰주어야 한다. Security Scheme Object FastAPI에서 추가하기 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 from fastapi import FastAPI, Security from fastapi.</description></item><item><title>Redash</title><link>https://jiyeonseo.github.io/digital-garden/notes/Redash/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Redash/</guid><description>지원 데이터 소스 Amazon 계열 : Athena, CloudWatch, DynamoDB, Redshift Google 계열 : Analytics, BigQuery, Spreadsheets Microsoft Azure 계열 : Data Warehouse / Synapse, SQL Database, SQL Server Cassandra Clickhouse CockroachDB CSV (self-hosted에서는 지원하지 않음) MongoDB PostgresQL Supported Data Sources Queries Dashboards Alerts References Creating and Editing Queries</description></item><item><title>Redis OM Python</title><link>https://jiyeonseo.github.io/digital-garden/notes/Redis-OM-Python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Redis-OM-Python/</guid><description>Object Mapper for Redis and Python high-level 추상화로 데이터 모델과 쿼리를 코드로 편하게 할수 있도록 도와주는 라이브러리 인메모리 DB인 Redis에서도 기존 RDB 라이브러리(SQLAlchemy, Peewee, Django ORM 등)에서와 같이 declarative model로 데이터를 다룰 수 있게 해준다.</description></item><item><title>Redis 트러블슈팅</title><link>https://jiyeonseo.github.io/digital-garden/notes/Redis-troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Redis-troubleshooting/</guid><description>&amp;ldquo;WRONGTYPE Operation against a key holding the wrong kind of value&amp;rdquo; Redis는 여러 데이터 타입을 제공한다. 각각에 맞는 명령어를 써 주어야 하는데 실제 키 값의 타입과 명령어가 맞지 않으면 이와 같은 에러가 난다.</description></item><item><title>supabase</title><link>https://jiyeonseo.github.io/digital-garden/notes/supabase/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/supabase/</guid><description>supabase Fairebase 대체제로 오픈소스 프로젝트. Backend as a Service로 백엔드 서버를 간단한 설정만으로 빠르게 구축해준다. Features Database PostgreSQL JWT authentication을 이용하여 클라이언트단에서 바로 SQL 쿼리가 들어오더라도 룰에 맞게 쿼리 실행.</description></item><item><title>TimescaleDB 운영 쿼리</title><link>https://jiyeonseo.github.io/digital-garden/notes/TimescaleDB-Operational-Query/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/TimescaleDB-Operational-Query/</guid><description>Timescale DB Version 확인 1 SELECTextversionFROMpg_extensionwhereextname=&amp;#39;timescaledb&amp;#39;; Hypertable 만들기 1 SELECTcreate_hypertable(&amp;#39;public.cheese_table_name&amp;#39;,&amp;#39;time&amp;#39;); Hypertable interval 설정하기 1 2 SELECTset_chunk_time_interval(&amp;#39;public.</description></item><item><title>Tree 명령어</title><link>https://jiyeonseo.github.io/digital-garden/notes/Tree-%EB%AA%85%EB%A0%B9%EC%96%B4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Tree-%EB%AA%85%EB%A0%B9%EC%96%B4/</guid><description>폴더 구조를 시각적으로 보기 쉽도록 트리 형태로 보여주는 명령어 Install MacOS (Homebrew) 1 brew install tree Linux (RHEL / CentOS / Fedora / Rocky / Alma Linux) 1 2 3 yum install tree ## CentOS/RHEL 8.</description></item><item><title>ULID</title><link>https://jiyeonseo.github.io/digital-garden/notes/ULID/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/ULID/</guid><description>Universally Unique Lexicographically Sortable Identifiers 128 bits 이며 UUID와 호환 가능 매 밀리세컨드마다 1.21e+24 유니크값 생성 가능 시간을 나타내는 앞 48bits와 임의값 80bits로 구성된 값.</description></item><item><title>Uncle Block</title><link>https://jiyeonseo.github.io/digital-garden/notes/Uncle-Block/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Uncle-Block/</guid><description>References https://docs.alchemy.com/docs/what-are-uncle-blocks</description></item><item><title>unleash</title><link>https://jiyeonseo.github.io/digital-garden/notes/unleash/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/unleash/</guid><description>피쳐 토글 서비스 (비슷한 서비스로는 [[notes/LaunchDarkly]] 가 있다.) 코드 배포와 기능 배포를 서로 분리시킴으로써 더욱 안전한 배포 유연한 기능 오픈/클로즈를 수행할 수 있다.</description></item><item><title>비트코인</title><link>https://jiyeonseo.github.io/digital-garden/notes/bitcoin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/bitcoin/</guid><description> 그래픽카드가 비싸진 이유는 비트코인때문이라는 말이 많지만, 이제 채굴 난이도가 높아서 ASIC 비트코인 채굴 전용 기계가 아니면 무용지물이다.</description></item><item><title>스테이블코인</title><link>https://jiyeonseo.github.io/digital-garden/notes/stable-coin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/stable-coin/</guid><description>References</description></item><item><title>이더리움 2.0</title><link>https://jiyeonseo.github.io/digital-garden/notes/ethereum-2.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/ethereum-2.0/</guid><description>PoW(작업증명) 으로 보완하지 못했던 부분들을 PoS(지분증명)의 시간 단위는 슬롯과 에팍 밸리데이터 보증금 32ETH 를 예치하여야 한다. 역할 밸리데이터 집단을 저장 및 유지 관리 Crosslinks 처리 블록 합의 처리 슬롯 (slot) 시간의 가장 작은 단위 12초 = 1 슬롯 (1 슬롯당 1개의 블록 형성) 32슬롯 = 1 에팍.</description></item><item><title>처리율 제한 장치 Rate Limitter</title><link>https://jiyeonseo.github.io/digital-garden/notes/Rate-Limiter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Rate-Limiter/</guid><description>필요한 이유 일정 시간 당 요청수를 제한함. e.g. RPS (Request Per Second) 서비스에 한 번에 엄청난 수의 요청을 받게 된 경우 서버를 안정적으로 운영하기 위해 특정 요청에 대해서만 허용하는 방법.</description></item><item><title>하드포크</title><link>https://jiyeonseo.github.io/digital-garden/notes/hard-fork/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/hard-fork/</guid><description> 블록체인 업그레이드 작업 기존 블록체인에서 다른 블로체인으로 넘어갈때 사용하는 방식 이유 기술적 문제 혹은 보안 개선을 위해 새로운 기능을 추가 하기 위해 거래 반전을 위해</description></item></channel></rss>