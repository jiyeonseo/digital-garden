<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>redis on</title><link>https://jiyeonseo.github.io/digital-garden/tags/redis/</link><description>Recent content in redis on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jiyeonseo.github.io/digital-garden/tags/redis/index.xml" rel="self" type="application/rss+xml"/><item><title>(Build Your Own Redis with C/C++) 1. socket 통신, Protocol Parsing</title><link>https://jiyeonseo.github.io/digital-garden/notes/build-your-own-redis-with-c-cpp-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/build-your-own-redis-with-c-cpp-1/</guid><description>Build Your Own Redis With C/C++ 을 보고 정리한 글입니다. 더 자세한 나용은 원문을 참고하실 수 있습니다. 직접 실습한 코드는 jiyeonseo/build-your-own-redis-with-c-cpp 에서 찾아볼 수 있습니다.</description></item><item><title>(Build Your Own Redis with C/C++) 2. Event Loop</title><link>https://jiyeonseo.github.io/digital-garden/notes/build-your-own-redis-with-c-cpp-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/build-your-own-redis-with-c-cpp-2/</guid><description>Build Your Own Redis With C/C++ 을 보고 정리한 글입니다. 더 자세한 나용은 원문을 참고하실 수 있습니다. 직접 실습한 코드는 jiyeonseo/build-your-own-redis-with-c-cpp 에서 찾아볼 수 있습니다.</description></item><item><title>(Build Your Own Redis with C/C++) 3. Implement basic commands</title><link>https://jiyeonseo.github.io/digital-garden/notes/build-your-own-redis-with-c-cpp-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/build-your-own-redis-with-c-cpp-3/</guid><description>Build Your Own Redis With C/C++ 을 보고 정리한 글입니다. 더 자세한 나용은 원문을 참고하실 수 있습니다. 직접 실습한 코드는 jiyeonseo/build-your-own-redis-with-c-cpp 에서 찾아볼 수 있습니다.</description></item><item><title>[redis-py Cluster] Redis Cluster cannot be connected. Please provide at least one reachable node</title><link>https://jiyeonseo.github.io/digital-garden/notes/Redis-Cluster-cannot-be-connected.-Please-provide-at-least-one-reachable-node/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Redis-Cluster-cannot-be-connected.-Please-provide-at-least-one-reachable-node/</guid><description>[[notes/memorydb]] 를 node 2개(master + replica)로, client는 redis-py cluster로 연결하고 사용하고 있었다. Memory DB는 Redis Cluster로 구성되어있기 때문에 하나의 node가 내려가더라도 대기중인 replica가 올라가기 때문에 내구성이 뛰어나고, 모든 노드에 똑같이 복사가 되기 때문에 데이터의 유실도 없다.</description></item><item><title>MemoryDB</title><link>https://jiyeonseo.github.io/digital-garden/notes/memorydb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/memorydb/</guid><description>Redis Cluster로 다중AZ 트랜잭션으로 빠르게 읽으면서도 내구성있는 DB. 따로 RDB + Cache 구성 필요 없이, Redis 구성 하나만으로 Consistency와 속도의 장점을 모두 가질 수 있다.</description></item><item><title>Redis OM Python</title><link>https://jiyeonseo.github.io/digital-garden/notes/Redis-OM-Python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Redis-OM-Python/</guid><description>Object Mapper for Redis and Python high-level 추상화로 데이터 모델과 쿼리를 코드로 편하게 할수 있도록 도와주는 라이브러리 인메모리 DB인 Redis에서도 기존 RDB 라이브러리(SQLAlchemy, Peewee, Django ORM 등)에서와 같이 declarative model로 데이터를 다룰 수 있게 해준다.</description></item><item><title>Redis 트러블슈팅</title><link>https://jiyeonseo.github.io/digital-garden/notes/Redis-troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Redis-troubleshooting/</guid><description>&amp;ldquo;WRONGTYPE Operation against a key holding the wrong kind of value&amp;rdquo; Redis는 여러 데이터 타입을 제공한다. 각각에 맞는 명령어를 써 주어야 하는데 실제 키 값의 타입과 명령어가 맞지 않으면 이와 같은 에러가 난다.</description></item></channel></rss>