<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ethereum on</title><link>https://jiyeonseo.github.io/digital-garden/tags/ethereum/</link><description>Recent content in ethereum on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jiyeonseo.github.io/digital-garden/tags/ethereum/index.xml" rel="self" type="application/rss+xml"/><item><title>ABI</title><link>https://jiyeonseo.github.io/digital-garden/notes/ABI/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/ABI/</guid><description>Contract Application Binary Interface Smart Contract 함수와 파라미터에 대한 Interface 정의 가지고 있는 정보 함수에 대한 정보 함수에서 사용하는 인수 예시 : https://etherscan.</description></item><item><title>Block Proposer</title><link>https://jiyeonseo.github.io/digital-garden/notes/Block-Proposer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Block-Proposer/</guid><description>References What is Proposer / Builder Separation (PBS)?</description></item><item><title>ERC-1155</title><link>https://jiyeonseo.github.io/digital-garden/notes/ERC-1155/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/ERC-1155/</guid><description/></item><item><title>ERC-20</title><link>https://jiyeonseo.github.io/digital-garden/notes/erc-20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/erc-20/</guid><description>ERC-20 Token Standard
각 토큰은 다른 토큰과 정확히 동일한 속성을 가지고 있다. ETH과 동일하게 작동하며, 1개의 토큰은 다른 토큰과 항상 같다.</description></item><item><title>ERC-721</title><link>https://jiyeonseo.github.io/digital-garden/notes/ERC-721/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/ERC-721/</guid><description/></item><item><title>Ethereum</title><link>https://jiyeonseo.github.io/digital-garden/notes/Ethereum/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Ethereum/</guid><description>Ethereum 컴퓨터가 내장된 블록체인. 비트코인과 다른 점 : 암호화폐로서의 기능 뿐만 아니라 프로그래밍이 가능. 네트워크에서 분산형 애플리케이션을 구축 및 배포할 수 있음.</description></item><item><title>Ethereum Virtual Machine</title><link>https://jiyeonseo.github.io/digital-garden/notes/Ethereum-Virtual-Machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Ethereum-Virtual-Machine/</guid><description>References The Ethereum Virtual Machine — How does it work?</description></item><item><title>ethers.js</title><link>https://jiyeonseo.github.io/digital-garden/notes/ethers.js/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/ethers.js/</guid><description>ethers.js Web3 JavaScript 라이브러리로 2016년에 Richard Moore가 만들었다. 기존 라이브러리와 다르게 web3 기반으로 [[notes/Ethereum]] 네트워크와 상호작용이 쉽다. 처음에는 ethers.</description></item><item><title>Etherscan</title><link>https://jiyeonseo.github.io/digital-garden/notes/Etherscan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/Etherscan/</guid><description> Etherscan 웹 어플리케이션으로 address로 [[notes/Ethereum]]의 모든 트랜잭션과 블록을 추적할수 있는 툴 transaction block address 읽는 방법 [[notes/How NFT smart contract really work]] Transaction Details</description></item><item><title>How NFT smart contract really work</title><link>https://jiyeonseo.github.io/digital-garden/notes/How-NFT-smart-contract-really-work/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/How-NFT-smart-contract-really-work/</guid><description>Ethereum NFT 기준
OpenSea 예제 Doodle #1815 OpenSea 주소에서 chain, contract address, token 확인할 수 있다.</description></item><item><title>London Upgrade</title><link>https://jiyeonseo.github.io/digital-garden/notes/London-upgrade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/London-upgrade/</guid><description>런던 [[notes/hard fork]] 2021년 8월 5일 수수료 구조 개선 및 공급량 조절 등 EIP-1559 가스비를 줄이기 위한 새로운 수수료 구조 도입 (수수료 절감) 런던 업그레이드의 핵심 내용 문제점 더 높은 수수료를 제시하는 거래가 더 빠르게 이루어지는 구조.</description></item><item><title>이더리움 2.0</title><link>https://jiyeonseo.github.io/digital-garden/notes/ethereum-2.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jiyeonseo.github.io/digital-garden/notes/ethereum-2.0/</guid><description>PoW(작업증명) 으로 보완하지 못했던 부분들을 PoS(지분증명)의 시간 단위는 슬롯과 에팍 밸리데이터 보증금 32ETH 를 예치하여야 한다. 역할 밸리데이터 집단을 저장 및 유지 관리 Crosslinks 처리 블록 합의 처리 슬롯 (slot) 시간의 가장 작은 단위 12초 = 1 슬롯 (1 슬롯당 1개의 블록 형성) 32슬롯 = 1 에팍.</description></item></channel></rss>